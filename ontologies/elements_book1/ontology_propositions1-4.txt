Proposition 1:
concepts: equilateral triangle, finite straight line, given finite straight line
relations: finite(straight_line), equilateral(triangle)
operations: construct(equilateral_triangle, finite_straight_line) --> equilateral_triangle 
implication: construct(equilateral_triangle, finite_straight_line) |- is_located(equilateral_triangle, finite_straight_line)
moral: existence of triangles

Proposition 2:
concepts: finite straight line, point, given point
relations: equal(new_line, given_line), given(point), given(finite straight_line)
operations: place(finite straight_line, point) --> line
implication: place(finite straight_line, point) |- equal(place(finite straight_line, point), finite straight_line)
moral: feasibility of rigid motion

Proposition 3:
concepts: straight line, unequal lengths of finite straight lines
relations: unequal(lenght_of_line1, lenght_of_line2), greater(lenght_of_line1, lenght_of_line2), given(line1), given(line2)
operations: cut_off(greater_line, length_of_lesser_line) --> finite_straight_line
implication: cut_off(greater_line, length_of_lesser_line) |- unequal(greater_line, lesser_line)
moral: subtraction of lengths

Proposition 4:
concepts: triangle, side, angle, base, sides subtending angle
relations: 
- equal(lenght_of_side1_triangle1, lenght_of_side1_triangle2)
- equal(lenght_of_side2_triangle1, lenght_of_side2_triangle2)
- equal(inclination_of_contained_angle1, inclination_of_contained_angle2)
- opposite(angle, side)
operations: compare(lenght_of_sides, inclination_of_angles) [mental_operation]
implication: compare(triangle1, triangle2, side1AB, side2AB, side1AC, side2AC, angle1ABC, angle2ABC) |- congruent(triangle1, triangle2)
moral: SAS criterion forcongruence